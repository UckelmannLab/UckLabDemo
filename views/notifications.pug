extends layout

block content
  .inner
    p
    header.top
      nav.nav
        .nav__section.nav__section--pages
          li.nav__item: a.nav__link(href="/projects", class=(currentPath.startsWith('/projects') ? 'nav__link--active' : '')) #{layout.projects}
          li.nav__item: a.nav__link(href="/constructor", class=(currentPath.startsWith('/constructor') ? 'nav__link--active' : '')) #{layout.chooseTasks}
          li.nav__item: a.nav__link(href="/tasks", class=(currentPath.startsWith('/tasks') ? 'nav__link--active' : '')) #{layout.customizeParameters}
          li.nav__item: a.nav__link(href="/invitations", class=(currentPath.startsWith('/invitations') ? 'nav__link--active' : '')) #{layout.invitations}
          li.nav__item: a.nav__link(href="/notifications", class=(currentPath.startsWith('/notifications') ? 'nav__link--active' : '')) #{layout.notifications}
          li.nav__item: a.nav__link(href="/testing", class=(currentPath.startsWith('/testing') ? 'nav__link--active' : '')) #{layout.tryDemo}
          li.nav__item: a.nav__link(href="/results", class=(currentPath.startsWith('/results') ? 'nav__link--active' : '')) #{layout.demoResults}
    p
    h2 #{layout.notifications}
    .card
      if project && project.name
        
        script(src='/javascripts/datepicker/jquery-3.3.1.min.js' nonce=`${noncevalue}`)
        link(href='/javascripts/datepicker/datetimepicker.css', rel='stylesheet', type='text/css' nonce=`${noncevalue}`)
        script(type='text/javascript', src='/javascripts/datepicker/datetimepicker.js' nonce=`${noncevalue}`)
        link(rel='stylesheet', href='/javascripts/datepicker/font-awesome.min.css' nonce=`${noncevalue}`)
        link(href='/javascripts/datepicker/jquerysctipttop.css', rel='stylesheet', type='text/css' nonce=`${noncevalue}`)
        script(type='text/javascript', src='/javascripts/datepicker/moment-with-locales.min.js' nonce=`${noncevalue}`)
        link(href='/javascripts/datepicker/daterangepicker.css', rel='stylesheet', type='text/css' nonce=`${noncevalue}`)
        script(type='text/javascript', src='/javascripts/datepicker/daterangepicker.min.js' nonce=`${noncevalue}`)
        script(type='text/javascript', src='/javascripts/datepicker/bootstrap-duration-picker.js' nonce=`${noncevalue}`)  
        link(href='/javascripts/datepicker/bootstrap-duration-picker.css', rel='stylesheet', type='text/css' nonce=`${noncevalue}`)
        
        .notificationsPanel
          .card
            p !{l.deprecation_message}
          p #{l.testing_message}
          h6 #{l.title} 
          input#titleContent(type='text', value = l.title_placeholder)
          h6 #{l.message} 
          input#messageContent(type='text', value = l.message_placeholder)
          p
          #notification_status_schedule(style='visibility:hidden') #{l.registering_busy_message} 
          p 
          #controlButtons(style="display: grid; grid-template-columns: 1fr 1fr 1fr; grid-column-gap: 15px;")
            button(class="buttonContainer" id="scheduleNotification") #{l.schedule}   
            button(class="buttonContainer" id="intervalNotification") #{l.interval}     
            button(class="buttonContainer" id="individualNotification") #{l.individual}    
          
          p
          .notificationContainer(id="scheduleNotificationContainer" style="display:none") 
            p #{l.schedule_explanation_1}
            p #{l.schedule_explanation_2}
            #dateTimePicker  
              .container_picker
                #picker 
                input#dateresult(class='scheduleInput' type='hidden', value='')
                button(type="button" value="Add a field" id="addDateTimePicker") +
            button(id="create_schedule_notification" class="button") #{l.add}
  
          .notificationContainer(id="intervalNotificationContainer" style="display:none")
            p #{l.interval_explanation_1}
            p #{l.interval_explanation_2}
            input(type="text", name="datetimes_regular")
            p !{l.cron_explanation}  
            #cronintervalPicker_regular(class="cronintervalPicker")
              h7(style="text-align: center;") #{l.minute}  
              h7(style="text-align: center;") #{l.hour} 
              h7(style="text-align: center;") #{l.day_month} 
              h7(style="text-align: center;") #{l.month} 
              h7(style="text-align: center;") #{l.day_week} 
              input(type='text' id='int_min_regular')
              input(type='text' id='int_hour_regular')
              input(type='text' id='int_day_regular')
              input(type='text' id='int_month_regular')  
              input(type='text' id='int_week_regular')  
            p  
            button(id="create_interval_notification" class="button") #{l.add}
              
          
          .notificationContainer(id="individualNotificationContainer" style="display:none")
            p #{l.individual_explanation_1}
            p #{l.individual_explanation_2}
            input(type="text" class="form-control" id="duration")
            p !{l.cron_explanation}  
            #cronintervalPicker_individual(class="cronintervalPicker")
              h7(style="text-align: center;") #{l.minute} 
              h7(style="text-align: center;") #{l.hour} 
              h7(style="text-align: center;") #{l.day_month} 
              h7(style="text-align: center;") #{l.month} 
              h7(style="text-align: center;") #{l.day_week} 
              input(type='text' id='int_min_individual')
              input(type='text' id='int_hour_individual')
              input(type='text' id='int_day_individual')
              input(type='text' id='int_month_individual')  
              input(type='text' id='int_week_individual')  
            p  
            button(id="create_individual_notification" class="button") #{l.add}
            
          
        if (project && project.notifications && project.notifications.length > 0)
          h2 #{l.scheduled_notifications} 
          table.table
            thead
              td #{l.table_type} 
              td #{l.table_title}  
              td #{l.table_message} 
              td #{l.table_date} 
              td #{l.table_interval}  
              td #{l.table_start} 
              td #{l.table_end} 
              td #{l.table_delete} 
            each notification, i in project.notifications.sort(function(a,b){return a.date - b.date})
              tr(style=`background-color:${(notification.mode === 'Interval' || notification.mode === 'Individual') ? '#fdf4a7' : ((notification.date - new Date()) > 0 ? 'white' : '#f3f0f0')}`) 
                td= notification.mode
                td= notification.title 
                td= notification.message
                td= notification.mode === 'Schedule' ? h.moment.utc(notification.date).local().locale(language).format('dddd, MMMM Do YYYY, H:mm') : ''
                td= notification.mode === 'Schedule' ? '' : notification.interval.slice(2)
                td= notification.mode === 'Schedule' ? '' : h.moment.utc(notification.int_start).local().locale(language).format('MMMM Do YYYY, H:mm')
                td= notification.mode === 'Schedule' ? '' : h.moment.utc(notification.int_end).local().locale(language).format('MMMM Do YYYY, H:mm')
                td
                  a(href=`/removenotification/${notification.id}`)
                    != h.icon('remove')
          p  
          button(id="delete_all_notifications" class="button" style="background-color:red; color:white") #{l.delete_notifications} 
                         
        script(defer type='text/javascript' nonce=`${noncevalue}`).
          $(document).ready( function () {
              $('#picker').dateTimePicker({
                selectData: "now",
              });
              $('#interval_picker_starting_date').dateTimePicker();
              $('#interval_picker_ending_date').dateTimePicker();
              $('input[name="datetimes_regular"]').daterangepicker({
                timePicker: true,
                startDate: moment().startOf('hour'),
                endDate: moment().startOf('hour').add(32, 'hour'),
                locale: {
                  format: 'M/DD hh:mm A'
                }
              });
              $('#duration').durationPicker({
                showSeconds: true
              });
          }) 
          var pickerNum = 1;
          document.addEventListener('DOMContentLoaded', function (){
            document.querySelectorAll('.buttonContainer').addEventListener('click', function changeContainer(){
              document.querySelector(`#scheduleNotificationContainer`).style.display = "none";
              document.querySelector(`#intervalNotificationContainer`).style.display = "none";
              document.querySelector(`#individualNotificationContainer`).style.display = "none";
              document.querySelector(`#${this.id}Container`).style.display = "inline-block";
              document.querySelectorAll('.buttonContainer').forEach( b => {b.style.background = "rgba(238, 242, 244, 0.6)"});
              this.style.background = "#11fa71";
            });
            document.getElementById('addDateTimePicker').addEventListener('click', function addPicker() { 
              pickerNum = pickerNum + 1;
              var container = document.getElementById("dateTimePicker");  
              var newPicker = document.createElement('div');
              newPicker.id = `container-picker-${pickerNum}`;
              newPicker.classList.add('container_picker');
              newPicker.style = 'width: 250px; margin: 20px auto;';
              var picker = document.createElement('div');
              picker.id = `picker-${pickerNum}`;
              newPicker.appendChild(picker);
              var input = document.createElement('input');
              input.classList.add('scheduleInput');
              input.type = 'hidden';
              input.value = ''
              input.id = `dateresult-${pickerNum}`
              newPicker.appendChild(input);
              var removePickerBtn = document.createElement('button');
              removePickerBtn.innerText = 'x';
              removePickerBtn.classList.add('removePickerButton');
              removePickerBtn.id = `-${pickerNum}`;
              removePickerBtn.addEventListener('click', removeScheduleDateTimePicker);
              newPicker.appendChild(removePickerBtn);
              container.appendChild(newPicker);
              $(`#picker-${pickerNum}`).dateTimePicker();
            });
          }); 
        
        script(type='text/javascript', src='/javascripts/services/schedule.js' nonce=`${noncevalue}`)
          
      else
        p !{l.message_create_project}

    //- pre= h.dump(project)
