extends layout

include mixins/_testCard

block content

  if user.level > 10
    .inner
      p
      header.top
        nav.nav
          .nav__section.nav__section--pages
            li.nav__item: a.nav__link(href="/projects", class=(currentPath.startsWith('/projects') ? 'nav__link--active' : '')) #{layout.projects}
            li.nav__item: a.nav__link(href="/constructor", class=(currentPath.startsWith('/constructor') ? 'nav__link--active' : '')) #{layout.chooseTasks}
            li.nav__item: a.nav__link(href="/tasks", class=(currentPath.startsWith('/tasks') ? 'nav__link--active' : '')) #{layout.customizeParameters}
            li.nav__item: a.nav__link(href="/invitations", class=(currentPath.startsWith('/invitations') ? 'nav__link--active' : '')) #{layout.invitations}
            li.nav__item: a.nav__link(href="/notifications", class=(currentPath.startsWith('/notifications') ? 'nav__link--active' : '')) #{layout.notifications}
            li.nav__item: a.nav__link(href="/testing", class=(currentPath.startsWith('/testing') ? 'nav__link--active' : '')) #{layout.tryDemo}
            li.nav__item: a.nav__link(href="/results", class=(currentPath.startsWith('/results') ? 'nav__link--active' : '')) #{layout.demoResults}
      p

      if(!project || typeof(project) == 'null')
        if (user.level > 10)
          h2 #{layout.testing}
          .card
            p !{l.message_create_project}

    if (user.level < 10)
      .inner
        .card
          form.form(action="/account" method="POST")
            h2 #{l.message_choose_project}
            p
            .custom-select-header
              select(name="participantInProject")
                each project in projects
                  option(value=project._id, selected=(project.name === study))= project.name

            p(style='white-space:pre;')
            input.button( type="submit" value=l.message_enter )
  
  if(project)
    - const arrayTests = projectTests.map(function(test) {return test.slug;});
    - const arrayResults = results.map(function(result) {return result.taskslug;});
    - const doneArray = arrayTests.filter(function(test) {return arrayResults.includes(test)});
    - const remainingArray = arrayTests.filter(function(test) {return !arrayResults.includes(test)});
    - const nextTask = remainingArray[0] || "allDone";

    .single
      if(user.level < 10)
        if user.participant_id
          h2= `${l.message_participant_id}: ${user.participant_id}`
      else
        .inner
          h2= `${l.title}`
      .single__hero
        - const comingTask = projectTests.filter(function(test){return test.slug == nextTask})[0]
        if comingTask
          img.single__image(src= `/uploads/${comingTask.photo || 'teacup.jpg'}`)
        else
          img.single__image(src= `/images/photos/${'over.jpg'}`)

    .single__details.inner
      if(nextTask == "allDone" && !project.allowMultipleParticipation)
        if(project.completionMessage && project.completionMessage !== '')
          p !{project.completionMessage}
        else
          p #{l.message_done}
        
        if(confirmationCode)
          if(project.showCompletionCode)
            .confirmationCode(style="display: grid; grid-template-columns: 2fr 1fr;")
              h5(style="color: #3b4051;") #{l.your_code}
              p #{confirmationCode}
      else
        if(project.welcomeMessage)
          p= `${project.welcomeMessage}`
        else 
          if(user.name)
            p= `${l.message_welcome}, ${user.name}!`
          else
            p= `${l.message_welcome}!`

      .dashboard
        .dashboardBody
          each test in projectTests
            if(test.slug == nextTask || project.allowMultipleParticipation)
              p
                strong #{test.name}
              p
                strong #{test.description}
            else if doneArray.includes(test.slug)
              p #{test.name}
              p #{test.description}
            if(test.slug == nextTask || project.allowMultipleParticipation)
              a(class='button', href=`/test/${test.slug}/${user._id}`) #{l.table_not_done}
            else if doneArray.includes(test.slug)
              p #{l.table_done}

    script(src="/javascripts/services/notifications.js" nonce=`${noncevalue}`)
