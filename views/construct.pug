extends layout

include mixins/_constructorTestCard
include mixins/_selectedTestCard

block content

  .inner
    p
    header.top
      nav.nav
        .nav__section.nav__section--pages
          li.nav__item: a.nav__link(href="/projects", class=(currentPath.startsWith('/projects') ? 'nav__link--active' : '')) #{layout.projects}
          li.nav__item: a.nav__link(href="/constructor", class=(currentPath.startsWith('/constructor') ? 'nav__link--active' : '')) #{layout.chooseTasks}
          li.nav__item: a.nav__link(href="/tasks", class=(currentPath.startsWith('/tasks') ? 'nav__link--active' : '')) #{layout.customizeParameters}
          li.nav__item: a.nav__link(href="/invitations", class=(currentPath.startsWith('/invitations') ? 'nav__link--active' : '')) #{layout.invitations}
          li.nav__item: a.nav__link(href="/notifications", class=(currentPath.startsWith('/notifications') ? 'nav__link--active' : '')) #{layout.notifications}
          li.nav__item: a.nav__link(href="/testing", class=(currentPath.startsWith('/testing') ? 'nav__link--active' : '')) #{layout.tryDemo}
          li.nav__item: a.nav__link(href="/results", class=(currentPath.startsWith('/results') ? 'nav__link--active' : '')) #{layout.demoResults}
    p
    h2 #{layout.chooseTasks}
    
    if(!project)
      p(style="color:hsl(0,0%,45%)") !{l.no_project_message}
    else 
      .userTable
        .tags
          a.tag__link(href = `/constructor` class=(!tag ? 'tag__link--active' : ''))
            span.tag__text #{layout.myTasks}
            span.tag__count
          a.tag__link(href = `/constructor/all` class=(tag === 'all' ? 'tag__link--active' : ''))
            span.tag__text #{layout.allTasks}
            span.tag__count
          
          if tags
            each t in tags
              li.tag
                a.tag__link(href = `/constructor/${t._id}` class=(t._id === tag ? 'tag__link--active' : ''))
                  span.tag__text= layout[t._id]
                  span.tag__count= t.count

        .constructor
          .card
            if project && project.name
              h5 #{`${project.name}`}
            else
              h5 #{l.title_project}
            .items 
              if project  
                if projectTests && projectTests.length > 0
                  each test in projectTests
                    +selectedTestCard(test)
                else
                  p(style="color:hsl(0,0%,45%)") #{l.not_chosen_message}
              else
                p(style="color:hsl(0,0%,45%)") !{l.no_project_message}
          
          .card 
            h5 #{l.randomization_header}
            
            form(action=`/edittaskinformation/study/${project._id}` method = 'POST' id ="tasksOptions")
              p #{l.randomize_order_header}
              select(name="randomize" id="randomize")
                option(value='No', selected=(!project.tasksInformation || (project.tasksInformation && !project.tasksInformation.randomize))) #{l.randomize_no}
                option(value='Yes', selected=project.tasksInformation && project.tasksInformation.randomize) #{l.randomize_yes}

              p #{l.sample_header}
              input(type="number" name= "sample" id="sample" value=project.tasksInformation && project.tasksInformation.sample min=1 max=project.tests.length)
              
              button(type='submit' form="tasksOptions" class="button" style='margin-top: 20px') #{l.randomize_save}
            
            
          .card
            h5 #{l.title_tasks}
            .stores
              if tests
                each test in tests
                  +constructorTestCard(test)
