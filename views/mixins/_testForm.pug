mixin testForm(test = {})

  form(action=`/add/${test._id || ''}` method = 'POST' enctype="multipart/form-data" id="testform")
    input(type='radio' name='upload' value='big' checked=(query && query.upload=='big') readonly hidden)
    input(type='text' name='slug' value=test.slug readonly hidden)
    input(type='text' name='contentSlug' value=test.contentSlug readonly hidden)
    label(for='name' style="font-weight:600") #{l.edit_name}
    input(type='text' name='name' value=test.name required)
    input(type='hidden' name='slug' value=test.slug)
    label(for ='description') #{l.edit_description}
    textarea(name='description')= test.description
    label(for='version') #{l.version}
    input(type='text' name='version' value=test.version)
    label(for='script' style="font-weight:600") #{l.edit_labjs_file}
    input(type="file" name='script' id='script' accept=".json")
    if test.scriptUpdated
      label(style="color: hsl(0,0%,45%)")= `${l.edit_uploaded}: ${h.moment.utc(test.scriptUpdated).local().locale(language).format('dddd, MMMM Do YYYY')}`
    
    div.cdn-choice
      if (user.subscription && (Date.now() < user.subscription_expires * 1000))
        div.inputCheckBox
          input(type = 'checkbox' id = 'cdn' name = 'cdn' checked = false)
          label(for='cdn')
            p.
               !{l.use_cdn}
      else 
        p(for="cdn-message") !{l.cdn_message}
      
    label(for='photo') #{l.edit_photo}
    input(type='file' name='photo' id='photo' accept="image/gif, image/png, image/jpeg")
    if test.photo
      img(src=`/uploads/${test.photo}`, alt=test.name width=200)
      input(type='hidden' name='photo' value=test.photo)
    if !test.photo
      script(nonce=`${noncevalue}`).
        document.addEventListener('DOMContentLoaded', function (){
          document.getElementById('lucky').addEventListener('click', function removePictureUpload() {
            if (document.getElementById('photo').style.display == 'none'){
              document.getElementById('photo').style.display = 'block';
            } else {
              document.getElementById('photo').style.display = 'none';
            }
          });
        });

      div.inputCheckBox
        input(type = 'checkbox' id = 'lucky' name = 'lucky' checked = false)
        label(for='lucky')
          span.
             #{l.feeling_lucky}

    - let choices = ['Negative valence', 'Positive valence', 'Cognitive systems', 'Social processes','Arousal and Regulatory systems']
    if(language == "de")
      - choices = ['Negative Valenz', 'Positive Valenz', 'Kognitive Systeme', 'Soziale Prozesse', 'Aktivierung und Regulierungssysteme']
    if(language == "ru")
      - choices = ['Негативная валентность', 'Позитивная валентность','Когнитивные системы', 'Социальные процессы', 'Возбуждение и регуляторные системы']
    - const tags = test.tags || []

    label(for='tags') #{l.edit_tags}
    ul.tags
      each choice in choices
        .tag.tag__choice
          input(type = 'checkbox' id=choice value=choice name='tags' checked=(tags.includes(choice)))
          label(for=choice) #{choice}    
          
    div.span4#test_privacy
      input(type='radio', name='open', value='true', style="visibility: true;" checked=(test.open==true))#wnr1

      label(for='wnr1')
        i.yes
        span.
          #{l.edit_public}
        br
        small #{l.edit_public_description}

      input(type='radio', name='open', value='false', style="visibility: true;" checked=test.open==false || (Object.keys(test).length === 0))#wnr2

      label(for='wnr2')
        i.yes
        span.
          #{l.edit_private}
        br
        small #{l.edit_private_description}

    div(id="paymentinformation" style="display: none")
      p !{l.upgradeNeededMessage}
    p
    input(type='submit' id="btnAddTest" value=l.edit_save class="button")


  
